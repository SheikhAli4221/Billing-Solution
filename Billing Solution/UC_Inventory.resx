<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>